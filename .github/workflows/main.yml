name: ci

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash

jobs:
  build-ros-opencv:
    name: Build ros opencv
    runs-on: ubuntu-20.04
    steps:
      -
        name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      -
        name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v9
        with:
          files: Dockerfile_opencv
      -
        name: Set up QEMU
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile_opencv
          platforms: linux/amd64,linux/arm64
          push: true
          tags: zhuoqiw/ros-opencv
  build-ros-pcl:
    name: Build ros pcl
    runs-on: ubuntu-20.04
    steps:
      -
        name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      -
        name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v9
        with:
          files: Dockerfile_pcl
      -
        name: Set up QEMU
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile_pcl
          platforms: linux/amd64,linux/arm64
          push: true
          tags: zhuoqiw/ros-pcl
  build-ros-image:
    name: Build ros image
    needs: [build-ros-opencv, build-ros-pcl]
    runs-on: ubuntu-20.04
    steps:
      -
        name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      -
        name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v9
        with:
          files: |
            Dockerfile_opencv
            Dockerfile_pcl
            Dockerfile_build
      -
        name: Set up QEMU
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile_build
          platforms: linux/amd64,linux/arm64
          push: true
          tags: zhuoqiw/ros-build
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
  test-ros-image:
    name: Test ros image
    needs: build-ros-image
    runs-on: ubuntu-20.04
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile_test
          platforms: linux/amd64,linux/arm64
          push: true
          tags: zhuoqiw/ros-test
  deploy-ros-image:
    name: Deploy ros image
    needs: test-ros-image
    runs-on: ubuntu-20.04
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile_deploy
          platforms: linux/amd64,linux/arm64
          push: true
          tags: zhuoqiw/ros-deploy
